name: Integration tests

on:
  workflow_call:
    secrets:
      GHCR_TOKEN:
        required: true

jobs:
  integration-test:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # - name: Fetch Charm Under Test
      #   uses: actions/download-artifact@v4
      #   with:
      #     name: built-charm
      #     path: built/

      # - name: Get Charm Under Test Path
      #   id: charm-path
      #   run: echo "charm_path=$(find built/ -name '*.charm' -type f -print)" >> $GITHUB_OUTPUT

      - name: Setup MicroK8s
        id: canonical-k8s
        run: |
          echo "Installing snaps"
          sudo snap install microk8s --channel=1.31/stable --classic
          sudo snap install kubectl --classic

          echo "Starting MicroK8s"
          sudo microk8s status --wait-ready --timeout=600 

          echo "Enabling MicroK8s addons"
          sudo microk8s enable hostpath-storage

          echo "Enabling MicroK8s Multus addons"
          sudo microk8s addons repo add community https://github.com/canonical/microk8s-community-addons --reference feat/strict-fix-multus
          sudo microk8s enable multus
          sudo microk8s kubectl -n kube-system rollout status daemonset/kube-multus-ds
          sudo microk8s kubectl auth can-i create network-attachment-definitions

          echo "Configuring kubectl"
          mkdir -p ~/.kube
          sudo microk8s config > ~/.kube/config
          echo "kubeconfig=$(sudo microk8s config | base64 -w 0)" >> $GITHUB_OUTPUT
      
      - name: Setup Juju
        run: |
          echo "Installing Juju"
          sudo snap install juju --classic --channel=3.6/stable

          echo "Configuring Juju"
          juju add-k8s localhost-k8s
          juju bootstrap localhost-k8s

      # - name: Run integration tests
      #   run: |
      #     export CHARM_PATH="../${{ steps.charm-path.outputs.charm_path }}"
      #     INTEGRATION=1 go test ./... -v -timeout 1200s
